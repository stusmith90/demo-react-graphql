{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Stuart Smith\\\\Desktop\\\\demo-react-graphql\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stuart Smith\\\\Desktop\\\\demo-react-graphql\\\\src\\\\Pages\\\\Home\\\\index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n      characters{\\n        results{\\n          id\\n          name\\n          image\\n          status\\n          gender\\n        }\\n      }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport Character from \"../../Components/Character\";\nconst getDataQuery = gql(_templateObject());\n\nfunction Home() {\n  const _useQuery = useQuery(getDataQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, data.characters.results.map(character => React.createElement(Link, {\n    to: \"/\".concat(character.id),\n    key: character.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Character, {\n    characterImg: character.image,\n    characterName: character.name,\n    characterStatus: character.status,\n    characterGender: character.gender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Stuart Smith/Desktop/demo-react-graphql/src/Pages/Home/index.js"],"names":["React","gql","useQuery","Link","Character","getDataQuery","Home","loading","error","data","characters","results","map","character","id","image","name","status","gender"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,MAAMC,YAAY,GAAGJ,GAAH,mBAAlB;;AAcA,SAASK,IAAT,GAAgB;AAAA,oBACmBJ,QAAQ,CAACG,YAAD,CAD3B;AAAA,QACNE,OADM,aACNA,OADM;AAAA,QACGC,KADH,aACGA,KADH;AAAA,QACUC,IADV,aACUA,IADV;;AAGd,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,0CACGC,IAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,SAAS,IACpC,oBAAC,IAAD;AAAM,IAAA,EAAE,aAAMA,SAAS,CAACC,EAAhB,CAAR;AAA8B,IAAA,GAAG,EAAED,SAAS,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAED,SAAS,CAACE,KAAnC;AAA0C,IAAA,aAAa,EAAEF,SAAS,CAACG,IAAnE;AAAyE,IAAA,eAAe,EAAEH,SAAS,CAACI,MAApG;AAA4G,IAAA,eAAe,EAAEJ,SAAS,CAACK,MAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF;AASD;;AAED,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Character from \"../../Components/Character\";\r\n\r\nconst getDataQuery = gql`\r\n  query {\r\n      characters{\r\n        results{\r\n          id\r\n          name\r\n          image\r\n          status\r\n          gender\r\n        }\r\n      }\r\n  }\r\n`;\r\n\r\nfunction Home() {\r\n  const { loading, error, data } = useQuery(getDataQuery);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n    <>\r\n      {data.characters.results.map(character => (\r\n        <Link to={`/${character.id}`} key={character.id}>\r\n          <Character characterImg={character.image} characterName={character.name} characterStatus={character.status} characterGender={character.gender} />\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}