{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Stuart Smith\\\\Desktop\\\\demo-react-graphql\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stuart Smith\\\\Desktop\\\\demo-react-graphql\\\\src\\\\Pages\\\\Details\\\\index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query character($id: ID!) {\\n    character(id: $id) {\\n        id\\n        name\\n        image\\n        status\\n        gender\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport \"./styles.scss\";\nconst getDetails = gql(_templateObject());\n\nfunction Details({\n  match\n}) {\n  const id = match.params.id;\n\n  const _useQuery = useQuery(getDetails, {\n    variables: {\n      id\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return \"Error! \".concat(error);\n  const character = data.character;\n  return React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"details__back-button\",\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Back\"), React.createElement(\"img\", {\n    className: \"details__image\",\n    alt: \"\".concat(character.name),\n    src: character.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"details__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, character.name), React.createElement(\"p\", {\n    className: \"details__status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, character.status), React.createElement(\"p\", {\n    className: \"details__gender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, character.gender));\n}\n\nexport default Details;","map":{"version":3,"sources":["C:/Users/Stuart Smith/Desktop/demo-react-graphql/src/Pages/Details/index.js"],"names":["React","gql","useQuery","Link","getDetails","Details","match","id","params","variables","loading","error","data","character","name","image","status","gender"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,eAAP;AAGA,MAAMC,UAAU,GAAGH,GAAH,mBAAhB;;AAYA,SAASI,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAExB,QAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB;;AAFwB,oBAGSL,QAAQ,CAACE,UAAD,EAAa;AAClDK,IAAAA,SAAS,EAAE;AAAEF,MAAAA;AAAF;AADuC,GAAb,CAHjB;AAAA,QAGhBG,OAHgB,aAGhBA,OAHgB;AAAA,QAGPC,KAHO,aAGPA,KAHO;AAAA,QAGAC,IAHA,aAGAA,IAHA;;AAOxB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AACX,QAAME,SAAS,GAAGD,IAAI,CAACC,SAAvB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,EAAE,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,GAAG,YAAKA,SAAS,CAACC,IAAf,CAAnC;AAA0D,IAAA,GAAG,EAAED,SAAS,CAACE,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,SAAS,CAACC,IAAzC,CAHJ,EAII;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,SAAS,CAACG,MAA1C,CAJJ,EAKI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCH,SAAS,CAACI,MAA1C,CALJ,CADJ;AASH;;AAED,eAAeZ,OAAf","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.scss\";\r\n\r\n\r\nconst getDetails = gql`\r\n  query character($id: ID!) {\r\n    character(id: $id) {\r\n        id\r\n        name\r\n        image\r\n        status\r\n        gender\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Details({ match }) {\r\n\r\n    const id = match.params.id;\r\n    const { loading, error, data } = useQuery(getDetails, {\r\n        variables: { id },\r\n    });\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return `Error! ${error}`;\r\n    const character = data.character;\r\n\r\n    return (\r\n        <div className=\"details\">\r\n            <Link className=\"details__back-button\" to=\"/\">Back</Link>\r\n            <img className=\"details__image\" alt={`${character.name}`} src={character.image} />\r\n            <h1 className=\"details__name\">{character.name}</h1>\r\n            <p className=\"details__status\">{character.status}</p>\r\n            <p className=\"details__gender\">{character.gender}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}